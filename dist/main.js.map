{"version":3,"file":"main.js","mappings":"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","sources":["webpack://qvm-mvvm/./qvm/CompileUtil.js","webpack://qvm-mvvm/./qvm/Compiler.js","webpack://qvm-mvvm/./qvm/Dep.js","webpack://qvm-mvvm/./qvm/Observer.js","webpack://qvm-mvvm/./qvm/Qvm.js","webpack://qvm-mvvm/./qvm/Watcher.js","webpack://qvm-mvvm/webpack/bootstrap","webpack://qvm-mvvm/webpack/runtime/define property getters","webpack://qvm-mvvm/webpack/runtime/hasOwnProperty shorthand","webpack://qvm-mvvm/webpack/runtime/make namespace object","webpack://qvm-mvvm/./src/index.js"],"sourcesContent":["\r\n\r\nimport { Watcher } from './Watcher.js';\r\n//编译功能方法\r\nexport const CompileUtil = {\r\n    //根据表达式取到对应的数据\r\n    getVal(vm, expr) {\r\n        //vm.$data,'school.name',[school,name]\r\n        //reduce，data是函数执行后的返回值\r\n        return expr.split('.').reduce((data, current) => {\r\n            return data[current];\r\n        }, vm.$data);\r\n\r\n    },\r\n    setValue(vm, expr, value) {\r\n        //vm.$data 'school.name'=>mumu\r\n        return expr.split('.').reduce((data, current, index, arr) => {\r\n            if (index == arr.length - 1) {\r\n                return data[current] = value;\r\n            }\r\n            return data[current];\r\n        }, vm.$data);\r\n\r\n    },\r\n    /**\r\n     * 解析v-model这个指令\r\n     * node是节点，expr是表达式，vm是当前实例\r\n     * @param {*} node \r\n     * @param {*} expr \r\n     * @param {*} vm \r\n     */\r\n    model(node, expr, vm) {//node是节点，expr是表达式，vm是当前实例\r\n        //school.name vm.$data\r\n        //个输入框赋予value属性 node.value=xxx\r\n        let fn = this.updater['modelUpdater'];\r\n        new Watcher(vm, expr, (newVal) => {\r\n            //给输入框加一个观察者，如果稍后数据更新了会触发此方法，会拿新值给输入框赋值\r\n            fn(node, newVal);\r\n        });\r\n        node.addEventListener('input', (e) => {\r\n            let value = e.target.value;//获取用户输入的内容\r\n            this.setValue(vm, expr, value);\r\n        })\r\n        let value = this.getVal(vm, expr);\r\n        fn(node, value);\r\n    },\r\n    /**\r\n     * 给页面html添加数据监控Watcher，动态修改页面数据\r\n     * v-html=\"message\"\r\n     * @param {*} node \r\n     * @param {*} expr \r\n     * @param {*} vm \r\n     */\r\n    html(node, expr, vm) {//v-html=\"message\"\r\n        //node.innerHTML=xxxx\r\n        let fn = this.updater['htmlUpdater'];\r\n        new Watcher(vm, expr, (newVal) => {\r\n            //给加一个观察者，如果稍后数据更新了会触发此方法，会拿新值给输入框赋值\r\n            fn(node, newVal);\r\n        });\r\n        let value = this.getVal(vm, expr);\r\n        fn(node, value);\r\n    },\r\n    /**\r\n     * 获取内容的值，数据变更后的值\r\n     * @param {*} vm \r\n     * @param {*} expr \r\n     * @returns \r\n     */\r\n    getContentValue(vm, expr) {\r\n        //遍历表达式，重新替换成与个完整的内容，返还回去\r\n        return expr.replace(/\\{\\{(.+?)\\}\\}/g, (...args) => {\r\n            return this.getVal(vm, args[1]);\r\n        });\r\n\r\n    },\r\n    /**\r\n     * 添加on事件如 v-on:click=\"change\" \r\n     * @param {*} node  \r\n     * @param {*} expr \r\n     * @param {*} vm \r\n     * @param {*} eventName \r\n     */\r\n    on(node, expr, vm, eventName) {//v-on:click=\"change\" ,expr\r\n        node.addEventListener(eventName, (e) => {\r\n            //动态调用变量只能使用vm.[expr]\r\n            vm[expr].call(vm, e);//this.change\r\n        });\r\n    },\r\n    /**\r\n     * 给页面text添加数据监控Watcher，动态修改页面数据\r\n     * expr=>{{school.name}}{{a}},{{b}}\r\n     * @param {*} node \r\n     * @param {*} expr \r\n     * @param {*} vm \r\n     */\r\n    text(node, expr, vm) {//expr=>{{school.name}}{{a}},{{b}}\r\n        let fn = this.updater['textUpdater'];\r\n        let content = expr.replace(/\\{\\{(.+?)\\}\\}/g, (...args) => {\r\n            new Watcher(vm, args[1], (newVal) => {\r\n                //给表达式{{}}都加一个观察者\r\n                fn(node, this.getContentValue(vm, expr));//返回一个全的字符串\r\n            });\r\n            return this.getVal(vm, args[1]);\r\n        });\r\n        fn(node, content);\r\n    },\r\n    /**\r\n     * 把数据插入到节点\r\n     */\r\n    updater: {\r\n        /**\r\n         * 修改属性的值\r\n         * @param {*} node \r\n         * @param {*} value \r\n         */\r\n        modelUpdater(node, value) {\r\n            //修改属性的值\r\n            node.value = value;\r\n        },\r\n        /**\r\n         * 修改节点html内容\r\n         * @param {*} node \r\n         * @param {*} value \r\n         */\r\n        htmlUpdater(node, value) {\r\n            //修改html的内容\r\n            node.innerHTML = value;\r\n        },\r\n        /**\r\n         * 修改节点文本内容\r\n         * @param {*} node \r\n         * @param {*} value \r\n         */\r\n        textUpdater(node, value) {\r\n            //修改节点的文本内容\r\n            node.textContent = value;\r\n        }\r\n    }\r\n}\r\n","\r\nimport { CompileUtil } from './CompileUtil.js';\r\n\r\n//编译模板\r\nexport default class Compiler {\r\n    constructor(el, vm) {\r\n        //判断el属性，是不是一个元素，如果不是元素，那就获取\r\n        this.el = this.isElementNode(el) ? el : document.querySelector(el);\r\n        //console.log(this.el);\r\n        //把当前节点中的元素，获取到，放到内存\r\n\r\n        this.vm = vm;\r\n        let fragment = this.node2fragment(this.el);\r\n\r\n        //console.log(fragment);\r\n        //把节点中的内容进行替换\r\n\r\n        //编译模板 用数据编译\r\n        this.compile(fragment);\r\n\r\n        //把内容塞到页面\r\n        this.el.appendChild(fragment);\r\n    }\r\n    //判断是否v-开头\r\n    isDirective(attrName) {\r\n        return attrName.startsWith('v-');\r\n    }\r\n    /**\r\n     * 编译元素\r\n     * @param {*} node \r\n     */\r\n    compileElement(node) {\r\n        //拿到当前的属性\r\n        let attributes = node.attributes;\r\n        //console.log(attributes);\r\n        [...attributes].forEach(attr => {\r\n            //type=\"text\" v-model=\"school.name\"\r\n            let { name, value: expr } = attr;//v-model=\"school.msg\"\r\n            //console.log(name,value);\r\n            if (this.isDirective(name)) {//v-model, v-html, v-bind,\r\n                //console.log(node,'element');\r\n                let [, directive] = name.split('-');//v-on:click\r\n                let [directiveName, eventName] = directive.split(':');\r\n                //需要调用不同指令来处理\r\n                CompileUtil[directiveName](node, expr, this.vm, eventName);\r\n            }\r\n\r\n        })\r\n    }\r\n    /**\r\n     * 编译文本\r\n     * @param {*} node \r\n     */\r\n    compileText(node) {\r\n        //判断当前文本节点内容是否包含{{xxxx}} {{aaaa}}\r\n        let content = node.textContent;\r\n        // console.log(content,'内容');\r\n        if (/\\{\\{(.+?)\\}\\}/g.test(content)) {\r\n            //console.log(content);//找到所有文本\r\n            //文本节点\r\n            CompileUtil['text'](node, content, this.vm);//{{a}},{{b}}\r\n\r\n        }\r\n    }\r\n    /**\r\n     * 核心编译方法\r\n     * @param {*} node \r\n     */\r\n    compile(node) {\r\n        let childNodes = node.childNodes;\r\n\r\n        [...childNodes].forEach(child => {\r\n            //console.log(child.nodeType);\r\n            if (this.isElementNode(child)) {\r\n                //编译元素\r\n                // console.log(child);\r\n                this.compileElement(child);\r\n                //如果是元素，需要把自己传进去，遍历子节点\r\n                this.compile(child);\r\n            } else {\r\n                //console.log(child);\r\n                //编译文本\r\n                this.compileText(child);\r\n            }\r\n        })\r\n    }\r\n    /**\r\n     * 把节点移动到内存中\r\n     * @param {*} node \r\n     * @returns \r\n     */\r\n    node2fragment(node) {\r\n        //创建一个文档碎片\r\n        let fragment = document.createDocumentFragment();\r\n\r\n        let firstChild;\r\n        while (firstChild = node.firstChild) {\r\n            //appendChild具有移动性\r\n            fragment.appendChild(firstChild);\r\n        }\r\n        return fragment;\r\n    }\r\n    /**\r\n     * 判断是否是input文本框\r\n     * @param {*} node \r\n     * @returns \r\n     */\r\n    isElementNode(node) {\r\n        //判断是否是input=1\r\n        return node.nodeType === 1;\r\n    }\r\n\r\n}\r\n\r\nexport { Compiler }\r\n","\r\n\r\n/**\r\n * 观察者（发布订阅），被观察者\r\n */\r\nexport default class Dep {\r\n    constructor() {\r\n        this.subs = [];//存放watcher\r\n    }\r\n    /**\r\n     * 订阅\r\n     * @param {*} watcher \r\n     */\r\n    addSub(watcher) {\r\n        //添加watcher\r\n        this.subs.push(watcher);\r\n    }\r\n    /**\r\n     * 发布，执行监控的所有对象的修改方法\r\n     */\r\n    notify() {\r\n        this.subs.forEach(watcher => watcher.update());\r\n    }\r\n}\r\nexport { Dep }","\r\nimport { Dep } from './Dep.js';\r\n\r\n//数据劫持\r\nexport default class Observer {\r\n    constructor(data) {\r\n        this.observer(data);\r\n    }\r\n    /**\r\n     * 数据劫持\r\n     * @param {*} data \r\n     */\r\n    observer(data) {\r\n        //如果是对象\r\n        if (data && typeof data == 'object') {\r\n            for (let key in data) {\r\n                this.defineReactive(data, key, data[key]);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * 个每个属性，都加上一个发布订阅功能\r\n     * {school:{name:'mumu'}} school={}\r\n     * @param {*} obj \r\n     * @param {*} key \r\n     * @param {*} value \r\n     */\r\n    defineReactive(obj, key, value) {\r\n        //数据劫持\r\n        this.observer(value);//school:[watcher,watcher] b:[watcher]\r\n        let dep = new Dep()//个每个属性，都加上一个发布订阅功能\r\n        Object.defineProperty(obj, key, {\r\n            get() {\r\n                //创建watcher时，回去到对应的内容，并且把watcher放到全局上\r\n                //添加订阅\r\n                Dep.target && dep.addSub(Dep.target);\r\n                return value;\r\n            },\r\n            set: (newVal) => {\r\n                //{school:{name:'mumu'}} school={}\r\n                //新旧数据不一样修改数据，通知发布\r\n                if (newVal != value) {\r\n                    this.observer(newVal);\r\n                    value = newVal;\r\n                    dep.notify();\r\n                }\r\n            }\r\n        })\r\n    }\r\n}\r\nexport { Observer } ","/*\r\ncompile：编译模板，编译元素三个步骤：\r\n1. 先把真实DOM放入内存中 fragment；\r\n2.编译 => 提取元素节点含有v- v-model 文本节点{{}}；\r\n3. 把编译好的fragment 放入页面\r\nobserver：数据劫持，其主要使用ES5中的Object.defineProperty(vue3.x中表示弃用Object.defineProperty使用更快的原生proxy) 去给对象的属性添加get和set\r\nwatcher：监听，监听数据的变化\r\n*/\r\n//基类 调度class QJS{}\r\n//基类 调度\r\nimport { Compiler } from './Compiler.js';\r\nimport { Observer } from './Observer.js';\r\n\r\nexport default class Qvm {\r\n    constructor(options) {\r\n        this.$el = options.el;\r\n        this.$data = options.data;\r\n        let computed = options.computed;\r\n        let methods = options.methods;\r\n        //这个根元素 存在 编译模板\r\n        if (this.$el) {\r\n            //把数据全部转成Object.defineProperty来定义\r\n\r\n            //数据劫持\r\n            new Observer(this.$data);\r\n\r\n\r\n            //计算方法\r\n            //{{getNewName}} reduce vm.$data.getNewName\r\n            for (let key in computed) {//有依赖关系，数据\r\n                Object.defineProperty(this.$data, key, {\r\n                    get: () => {\r\n                        return computed[key].call(this);\r\n                    }\r\n                })\r\n            }\r\n\r\n            //所有普通事件方法\r\n            for (let key in methods) {\r\n                //方法用于在对象上定义一个新属性，或者修改对象现有属性，并返回此对象。\r\n                Object.defineProperty(this, key, {\r\n                    get() {\r\n                        //动态调用变量只能使用methods[key]\r\n                        return methods[key];\r\n                    }\r\n                })\r\n            }\r\n            //把数据获取操作，vm上的取值操作，都代理到vm.$data\r\n            this.proxyVm(this.$data);\r\n            //编译\r\n            new Compiler(this.$el, this);\r\n        }\r\n    }\r\n    /**\r\n     * 代理视图\r\n     * @param {*} data {school:{name,age}}\r\n     */\r\n    proxyVm(data) {\r\n        for (let key in data) {\r\n            //{school:{name,age}}\r\n            //方法用于在对象上定义一个新属性，或者修改对象现有属性，并返回此对象。\r\n            Object.defineProperty(this, key, {\r\n                get() {\r\n                    return data[key];\r\n                },\r\n                set(newValue) {//设置代理方法\r\n                    data[key] = newValue;\r\n                }\r\n            })\r\n        }\r\n    }\r\n}\r\nexport { Qvm } ","\r\nimport { CompileUtil } from './CompileUtil.js';\r\nimport { Dep } from './Dep.js';\r\n\r\n/**\r\n * 监听，监听数据的变化\r\n */\r\nexport default class Watcher {\r\n    constructor(vm, expr, cb) {\r\n        this.vm = vm;\r\n        this.expr = expr;\r\n        this.cb = cb;\r\n        //默认现存一个旧值\r\n        this.oldValue = this.get();\r\n    }\r\n    /**\r\n     * 取值，把这个观察者和数据关联起来\r\n     * @returns \r\n     */\r\n    get() {\r\n        Dep.target = this;//先把自己放在this上\r\n        //vm.$data.school, vm.$data.school.name\r\n        //取值，把这个观察者和数据关联起来\r\n        let value = CompileUtil.getVal(this.vm, this.expr);\r\n        Dep.target = null;//不取消，任何值取值，都会添加watcher\r\n        return value;\r\n    }\r\n    /**\r\n     * 更新操作，数据变化后，会调用观察者的update方法\r\n     */\r\n    update() {\r\n        let newVal = CompileUtil.getVal(this.vm, this.expr);\r\n\r\n        //新旧数据不一样在数据劫持已经判断过了，修改页面数据\r\n        //TODO: 暂时修改为直接修改数据\r\n        this.cb(newVal);\r\n    }\r\n}\r\nexport { Watcher } ","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import Qvm from '../qvm/Qvm.js';\r\nexport { Qvm } "],"names":["Watcher","CompileUtil","getVal","vm","expr","split","reduce","data","current","$data","setValue","value","index","arr","length","model","node","_this","fn","updater","newVal","addEventListener","e","target","html","getContentValue","_this2","replace","arguments","undefined","on","eventName","call","text","_this3","content","modelUpdater","htmlUpdater","innerHTML","textUpdater","textContent","Compiler","el","_classCallCheck","isElementNode","document","querySelector","fragment","node2fragment","compile","appendChild","_createClass","key","isDirective","attrName","startsWith","compileElement","attributes","_toConsumableArray","forEach","attr","name","_name$split","_name$split2","_slicedToArray","directive","_directive$split","_directive$split2","directiveName","compileText","test","childNodes","child","createDocumentFragment","firstChild","nodeType","default","Dep","subs","addSub","watcher","push","notify","update","Observer","observer","_typeof","defineReactive","obj","dep","Object","defineProperty","get","set","Qvm","options","$el","computed","methods","_loop","_loop2","_key","proxyVm","_loop3","newValue","cb","oldValue"],"sourceRoot":""}